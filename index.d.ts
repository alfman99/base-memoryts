/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class ExternalObject<T> {
  readonly '': {
    readonly '': unique symbol
    [K: symbol]: T
  }
}
export function setProtection(
  processHandle: ExternalObject<HANDLE>,
  address: number,
  size: number,
  protection: number,
): number
export function readBuffer(processHandle: ExternalObject<HANDLE>, address: number, size: number): Buffer
export function writeBuffer(processHandle: ExternalObject<HANDLE>, address: number, buffer: Buffer): void
export function getProcessModules(processHandle: ExternalObject<HANDLE>): Array<ModuleInfo>
export function listAllRunningProcesses(): Array<ProcessInfo>
export function openProcessPid(processPid: number): ExternalObject<HANDLE>
export function openProcessName(processName: string): ExternalObject<HANDLE>
export function closeProcess(processHandle: ExternalObject<HANDLE>): void
export function isElevatedProcess(): boolean
export function is64BitProcess(): boolean
export class ModuleInfo {
  name: string
  baseAddress: DWORD
  constructor(name: string, baseAddress: DWORD)
}
export class ProcessInfo {
  processName: string
  processId: DWORD
  constructor(processName: string, processId: DWORD)
}
